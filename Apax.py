# This module was generated by the wx.activex.GernerateAXModule class
# (See also the genaxmodule script.)

import wx
import wx.activex

clsID = '{28E7F3B1-59C2-4B1C-9D8E-0610B280898D}'
progID = 'APAX1.Apax'



# Create eventTypes and event binders
wxEVT_CTSChanged = wx.activex.RegisterActiveXEvent('OnCTSChanged')
wxEVT_DCDChanged = wx.activex.RegisterActiveXEvent('OnDCDChanged')
wxEVT_DSRChanged = wx.activex.RegisterActiveXEvent('OnDSRChanged')
wxEVT_LineBreak = wx.activex.RegisterActiveXEvent('OnLineBreak')
wxEVT_LineError = wx.activex.RegisterActiveXEvent('OnLineError')
wxEVT_PortClose = wx.activex.RegisterActiveXEvent('OnPortClose')
wxEVT_PortOpen = wx.activex.RegisterActiveXEvent('OnPortOpen')
wxEVT_Ring = wx.activex.RegisterActiveXEvent('OnRing')
wxEVT_RXD = wx.activex.RegisterActiveXEvent('OnRXD')
wxEVT_WinsockAccept = wx.activex.RegisterActiveXEvent('OnWinsockAccept')
wxEVT_WinsockConnect = wx.activex.RegisterActiveXEvent('OnWinsockConnect')
wxEVT_WinsockDisconnect = wx.activex.RegisterActiveXEvent('OnWinsockDisconnect')
wxEVT_WinsockError = wx.activex.RegisterActiveXEvent('OnWinsockError')
wxEVT_WinsockGetAddress = wx.activex.RegisterActiveXEvent('OnWinsockGetAddress')
wxEVT_DataTrigger = wx.activex.RegisterActiveXEvent('OnDataTrigger')
wxEVT_TapiCallerID = wx.activex.RegisterActiveXEvent('OnTapiCallerID')
wxEVT_TapiConnect = wx.activex.RegisterActiveXEvent('OnTapiConnect')
wxEVT_TapiDTMF = wx.activex.RegisterActiveXEvent('OnTapiDTMF')
wxEVT_TapiFail = wx.activex.RegisterActiveXEvent('OnTapiFail')
wxEVT_TapiGetNumber = wx.activex.RegisterActiveXEvent('OnTapiGetNumber')
wxEVT_TapiPortClose = wx.activex.RegisterActiveXEvent('OnTapiPortClose')
wxEVT_TapiPortOpen = wx.activex.RegisterActiveXEvent('OnTapiPortOpen')
wxEVT_TapiStatus = wx.activex.RegisterActiveXEvent('OnTapiStatus')
wxEVT_TapiWaveNotify = wx.activex.RegisterActiveXEvent('OnTapiWaveNotify')
wxEVT_TapiWaveSilence = wx.activex.RegisterActiveXEvent('OnTapiWaveSilence')
wxEVT_CursorMoved = wx.activex.RegisterActiveXEvent('OnCursorMoved')
wxEVT_ProtocolAccept = wx.activex.RegisterActiveXEvent('OnProtocolAccept')
wxEVT_ProtocolFinish = wx.activex.RegisterActiveXEvent('OnProtocolFinish')
wxEVT_ProtocolLog = wx.activex.RegisterActiveXEvent('OnProtocolLog')
wxEVT_ProtocolStatus = wx.activex.RegisterActiveXEvent('OnProtocolStatus')
wxEVT_ConnectButtonClick = wx.activex.RegisterActiveXEvent('OnConnectButtonClick')
wxEVT_ListenButtonClick = wx.activex.RegisterActiveXEvent('OnListenButtonClick')
wxEVT_CloseButtonClick = wx.activex.RegisterActiveXEvent('OnCloseButtonClick')
wxEVT_DeviceButtonClick = wx.activex.RegisterActiveXEvent('OnDeviceButtonClick')
wxEVT_SendButtonClick = wx.activex.RegisterActiveXEvent('OnSendButtonClick')
wxEVT_ReceiveButtonClick = wx.activex.RegisterActiveXEvent('OnReceiveButtonClick')
wxEVT_FontButtonClick = wx.activex.RegisterActiveXEvent('OnFontButtonClick')
wxEVT_Comm = wx.activex.RegisterActiveXEvent('OnComm')
wxEVT_EmulationButtonClick = wx.activex.RegisterActiveXEvent('OnEmulationButtonClick')
wxEVT_FTPError = wx.activex.RegisterActiveXEvent('OnFTPError')
wxEVT_FTPLog = wx.activex.RegisterActiveXEvent('OnFTPLog')
wxEVT_FTPReply = wx.activex.RegisterActiveXEvent('OnFTPReply')
wxEVT_FTPStatus = wx.activex.RegisterActiveXEvent('OnFTPStatus')
wxEVT_ProcessChar = wx.activex.RegisterActiveXEvent('OnProcessChar')

EVT_CTSChanged = wx.PyEventBinder(wxEVT_CTSChanged, 1)
EVT_DCDChanged = wx.PyEventBinder(wxEVT_DCDChanged, 1)
EVT_DSRChanged = wx.PyEventBinder(wxEVT_DSRChanged, 1)
EVT_LineBreak = wx.PyEventBinder(wxEVT_LineBreak, 1)
EVT_LineError = wx.PyEventBinder(wxEVT_LineError, 1)
EVT_PortClose = wx.PyEventBinder(wxEVT_PortClose, 1)
EVT_PortOpen = wx.PyEventBinder(wxEVT_PortOpen, 1)
EVT_Ring = wx.PyEventBinder(wxEVT_Ring, 1)
EVT_RXD = wx.PyEventBinder(wxEVT_RXD, 1)
EVT_WinsockAccept = wx.PyEventBinder(wxEVT_WinsockAccept, 1)
EVT_WinsockConnect = wx.PyEventBinder(wxEVT_WinsockConnect, 1)
EVT_WinsockDisconnect = wx.PyEventBinder(wxEVT_WinsockDisconnect, 1)
EVT_WinsockError = wx.PyEventBinder(wxEVT_WinsockError, 1)
EVT_WinsockGetAddress = wx.PyEventBinder(wxEVT_WinsockGetAddress, 1)
EVT_DataTrigger = wx.PyEventBinder(wxEVT_DataTrigger, 1)
EVT_TapiCallerID = wx.PyEventBinder(wxEVT_TapiCallerID, 1)
EVT_TapiConnect = wx.PyEventBinder(wxEVT_TapiConnect, 1)
EVT_TapiDTMF = wx.PyEventBinder(wxEVT_TapiDTMF, 1)
EVT_TapiFail = wx.PyEventBinder(wxEVT_TapiFail, 1)
EVT_TapiGetNumber = wx.PyEventBinder(wxEVT_TapiGetNumber, 1)
EVT_TapiPortClose = wx.PyEventBinder(wxEVT_TapiPortClose, 1)
EVT_TapiPortOpen = wx.PyEventBinder(wxEVT_TapiPortOpen, 1)
EVT_TapiStatus = wx.PyEventBinder(wxEVT_TapiStatus, 1)
EVT_TapiWaveNotify = wx.PyEventBinder(wxEVT_TapiWaveNotify, 1)
EVT_TapiWaveSilence = wx.PyEventBinder(wxEVT_TapiWaveSilence, 1)
EVT_CursorMoved = wx.PyEventBinder(wxEVT_CursorMoved, 1)
EVT_ProtocolAccept = wx.PyEventBinder(wxEVT_ProtocolAccept, 1)
EVT_ProtocolFinish = wx.PyEventBinder(wxEVT_ProtocolFinish, 1)
EVT_ProtocolLog = wx.PyEventBinder(wxEVT_ProtocolLog, 1)
EVT_ProtocolStatus = wx.PyEventBinder(wxEVT_ProtocolStatus, 1)
EVT_ConnectButtonClick = wx.PyEventBinder(wxEVT_ConnectButtonClick, 1)
EVT_ListenButtonClick = wx.PyEventBinder(wxEVT_ListenButtonClick, 1)
EVT_CloseButtonClick = wx.PyEventBinder(wxEVT_CloseButtonClick, 1)
EVT_DeviceButtonClick = wx.PyEventBinder(wxEVT_DeviceButtonClick, 1)
EVT_SendButtonClick = wx.PyEventBinder(wxEVT_SendButtonClick, 1)
EVT_ReceiveButtonClick = wx.PyEventBinder(wxEVT_ReceiveButtonClick, 1)
EVT_FontButtonClick = wx.PyEventBinder(wxEVT_FontButtonClick, 1)
EVT_Comm = wx.PyEventBinder(wxEVT_Comm, 1)
EVT_EmulationButtonClick = wx.PyEventBinder(wxEVT_EmulationButtonClick, 1)
EVT_FTPError = wx.PyEventBinder(wxEVT_FTPError, 1)
EVT_FTPLog = wx.PyEventBinder(wxEVT_FTPLog, 1)
EVT_FTPReply = wx.PyEventBinder(wxEVT_FTPReply, 1)
EVT_FTPStatus = wx.PyEventBinder(wxEVT_FTPStatus, 1)
EVT_ProcessChar = wx.PyEventBinder(wxEVT_ProcessChar, 1)


# Derive a new class from ActiveXWindow
class Apax(wx.activex.ActiveXWindow):
    def __init__(self, parent, ID=-1, pos=wx.DefaultPosition,
                 size=wx.DefaultSize, style=0, name='Apax'):
        wx.activex.ActiveXWindow.__init__(self, parent,
            wx.activex.CLSID('{28E7F3B1-59C2-4B1C-9D8E-0610B280898D}'),
            ID, pos, size, style, name)
        
    # Methods exported by the ActiveX object
    def AddRef(self):
        return self.CallAXMethod('AddRef')

    def AddStringToLog(self, S):
        return self.CallAXMethod('AddStringToLog', S)

    def Close(self):
        return self.CallAXMethod('Close')

    def FlushInBuffer(self):
        return self.CallAXMethod('FlushInBuffer')

    def FlushOutBuffer(self):
        return self.CallAXMethod('FlushOutBuffer')

    def GetIDsOfNames(self, riid, rgszNames, cNames, lcid):
        return self.CallAXMethod('GetIDsOfNames', riid, rgszNames, cNames, lcid)

    def GetTypeInfoCount(self):
        return self.CallAXMethod('GetTypeInfoCount')

    def GetTypeInfo(self, itinfo, lcid):
        return self.CallAXMethod('GetTypeInfo', itinfo, lcid)

    def Invoke(self, dispidMember, riid, lcid, wFlags, pdispparams):
        return self.CallAXMethod('Invoke', dispidMember, riid, lcid, wFlags, pdispparams)

        
        
    def PortOpen(self):
        return self.CallAXMethod('PortOpen')

    def Release(self):
        return self.CallAXMethod('Release')

    def TapiDial(self):
        return self.CallAXMethod('TapiDial')

    def TapiAnswer(self):
        return self.CallAXMethod('TapiAnswer')

    def PutData(self, Data):
        return self.CallAXMethod('PutData', Data)

    def PutString(self, S):
        return self.CallAXMethod('PutString', S)

    def PutStringCRLF(self, S):
        return self.CallAXMethod('PutStringCRLF', S)

    def SendBreak(self, Ticks, Yield):
        return self.CallAXMethod('SendBreak', Ticks, Yield)

    def AddDataTrigger(self, TriggerString, PacketSize, Timeout, IncludeStrings, IgnoreCase):
        return self.CallAXMethod('AddDataTrigger', TriggerString, PacketSize, Timeout, IncludeStrings, IgnoreCase)

    def DisableDataTrigger(self, Index):
        return self.CallAXMethod('DisableDataTrigger', Index)

    def EnableDataTrigger(self, Index):
        return self.CallAXMethod('EnableDataTrigger', Index)

    def RemoveDataTrigger(self, Index):
        return self.CallAXMethod('RemoveDataTrigger', Index)

    def Clear(self):
        return self.CallAXMethod('Clear')

    def ClearAll(self):
        return self.CallAXMethod('ClearAll')

    def CopyToClipboard(self):
        return self.CallAXMethod('CopyToClipboard')

    def GetAttributes(self, aRow, aCol):
        return self.CallAXMethod('GetAttributes', aRow, aCol)

    def SetAttributes(self, aRow, aCol, Value):
        return self.CallAXMethod('SetAttributes', aRow, aCol, Value)

    def GetLine(self, Index):
        return self.CallAXMethod('GetLine', Index)

    def SetLine(self, Index, Value):
        return self.CallAXMethod('SetLine', Index, Value)

    def TerminalSetFocus(self):
        return self.CallAXMethod('TerminalSetFocus')

    def TerminalWriteString(self, S):
        return self.CallAXMethod('TerminalWriteString', S)

    def TerminalWriteStringCRLF(self, S):
        return self.CallAXMethod('TerminalWriteStringCRLF', S)

    def TapiAutoAnswer(self):
        return self.CallAXMethod('TapiAutoAnswer')

    def TapiCancelCall(self):
        return self.CallAXMethod('TapiCancelCall')

    def TapiConfigAndOpen(self):
        return self.CallAXMethod('TapiConfigAndOpen')

    def TapiSelectDevice(self):
        return self.CallAXMethod('TapiSelectDevice')

    def TapiSendTone(self, Digits):
        return self.CallAXMethod('TapiSendTone', Digits)

    def TapiSetRecordingParams(self, NumChannels, NumSamplesPerSecond, NumBitsPerSample):
        return self.CallAXMethod('TapiSetRecordingParams', NumChannels, NumSamplesPerSecond, NumBitsPerSample)

    def TapiShowConfigDialog(self, AllowEdit):
        return self.CallAXMethod('TapiShowConfigDialog', AllowEdit)

    def TapiPlayWaveFile(self, FileName):
        return self.CallAXMethod('TapiPlayWaveFile', FileName)

    def TapiRecordWaveFile(self, FileName, Overwrite):
        return self.CallAXMethod('TapiRecordWaveFile', FileName, Overwrite)

    def TapiStopWaveFile(self):
        return self.CallAXMethod('TapiStopWaveFile')

    def TapiTranslatePhoneNo(self, CanonicalAddr):
        return self.CallAXMethod('TapiTranslatePhoneNo', CanonicalAddr)

    def CancelProtocol(self):
        return self.CallAXMethod('CancelProtocol')

    def EstimateTransferSecs(self, Size):
        return self.CallAXMethod('EstimateTransferSecs', Size)

    def StartTransmit(self):
        return self.CallAXMethod('StartTransmit')

    def StartReceive(self):
        return self.CallAXMethod('StartReceive')

    def DrawTextBiDiModeFlagsReadingOnly(self):
        return self.CallAXMethod('DrawTextBiDiModeFlagsReadingOnly')

    def InitiateAction(self):
        return self.CallAXMethod('InitiateAction')

    def IsRightToLeft(self):
        return self.CallAXMethod('IsRightToLeft')

    def UseRightToLeftReading(self):
        return self.CallAXMethod('UseRightToLeftReading')

    def UseRightToLeftScrollBar(self):
        return self.CallAXMethod('UseRightToLeftScrollBar')

    def AboutBox(self):
        return self.CallAXMethod('AboutBox')

    def RemoveAllDataTriggers(self):
        return self.CallAXMethod('RemoveAllDataTriggers')

    def TapiStatusMsg(self, Message, State, Reason):
        return self.CallAXMethod('TapiStatusMsg', Message, State, Reason)

    def IsPortAvail(self, ComNumber):
        return self.CallAXMethod('IsPortAvail', ComNumber)

    def TapiTranslateDialog(self, CanonicalAddr):
        return self.CallAXMethod('TapiTranslateDialog', CanonicalAddr)

    def ErrorMsg(self, ErrorCode):
        return self.CallAXMethod('ErrorMsg', ErrorCode)

    def EnumTapiFirst(self):
        return self.CallAXMethod('EnumTapiFirst')

    def EnumTapiNext(self):
        return self.CallAXMethod('EnumTapiNext')

    def IsPortInstalled(self, ComNumber):
        return self.CallAXMethod('IsPortInstalled', ComNumber)

    def DelayTicks(self, Ticks):
        return self.CallAXMethod('DelayTicks', Ticks)

    def FTPAbort(self):
        return self.CallAXMethod('FTPAbort')

    def FTPChangeDir(self, RemotePathName):
        return self.CallAXMethod('FTPChangeDir', RemotePathName)

    def FTPCurrentDir(self):
        return self.CallAXMethod('FTPCurrentDir')

    def FTPDelete(self, RemotePathName):
        return self.CallAXMethod('FTPDelete', RemotePathName)

    def FTPHelp(self, Command):
        return self.CallAXMethod('FTPHelp', Command)

    def FTPListDir(self, RemotePathName, FullList):
        return self.CallAXMethod('FTPListDir', RemotePathName, FullList)

    def FTPLogIn(self):
        return self.CallAXMethod('FTPLogIn')

    def FTPLogOut(self):
        return self.CallAXMethod('FTPLogOut')

    def FTPMakeDir(self, RemotePathName):
        return self.CallAXMethod('FTPMakeDir', RemotePathName)

    def FTPRename(self, RemotePathName, NewPathName):
        return self.CallAXMethod('FTPRename', RemotePathName, NewPathName)

    def FTPRetrieve(self, RemotePathName, LocalPathName, RetrieveMode):
        return self.CallAXMethod('FTPRetrieve', RemotePathName, LocalPathName, RetrieveMode)

    def FTPSendFTPCommand(self, FTPCommand):
        return self.CallAXMethod('FTPSendFTPCommand', FTPCommand)

    def FTPStatus(self, RemotePathName):
        return self.CallAXMethod('FTPStatus', RemotePathName)

    def FTPStore(self, RemotePathName, LocalPathName, StoreMode):
        return self.CallAXMethod('FTPStore', RemotePathName, LocalPathName, StoreMode)

    def GetTapiConfig(self):
        return self.CallAXMethod('GetTapiConfig')

    def QueryInterface(self, riid):
        return self.CallAXMethod('QueryInterface', riid)

    def SetTapiConfig(self, Value):
        return self.CallAXMethod('SetTapiConfig', Value)

    def TapiLoadConfig(self, RegKey, KeyName):
        return self.CallAXMethod('TapiLoadConfig', RegKey, KeyName)

    def TapiSaveConfig(self, RegKey, KeyName):
        return self.CallAXMethod('TapiSaveConfig', RegKey, KeyName)

    def WinsockConnect(self):
        return self.CallAXMethod('WinsockConnect')

    def WinsockListen(self):
        return self.CallAXMethod('WinsockListen')


        
        
        
        
    # Getters, Setters and properties
    def _get_CTS(self):
        return self.GetAXProp('CTS')
    cts = property(_get_CTS, None)

    def _get_DCD(self):
        return self.GetAXProp('DCD')
    dcd = property(_get_DCD, None)

    def _get_DSR(self):
        return self.GetAXProp('DSR')
    dsr = property(_get_DSR, None)

    def _get_FlowState(self):
        return self.GetAXProp('FlowState')
    flowstate = property(_get_FlowState, None)

    def _get_InBuffUsed(self):
        return self.GetAXProp('InBuffUsed')
    inbuffused = property(_get_InBuffUsed, None)

    def _get_InBuffFree(self):
        return self.GetAXProp('InBuffFree')
    inbufffree = property(_get_InBuffFree, None)

    def _get_LineError(self):
        return self.GetAXProp('LineError')
    lineerror = property(_get_LineError, None)

    def _get_OutBuffFree(self):
        return self.GetAXProp('OutBuffFree')
    outbufffree = property(_get_OutBuffFree, None)

    def _get_OutBuffUsed(self):
        return self.GetAXProp('OutBuffUsed')
    outbuffused = property(_get_OutBuffUsed, None)

    def _get_RI(self):
        return self.GetAXProp('RI')
    ri = property(_get_RI, None)

    def _get_TapiAttempt(self):
        return self.GetAXProp('TapiAttempt')
    tapiattempt = property(_get_TapiAttempt, None)

    def _get_CallerID(self):
        return self.GetAXProp('CallerID')
    callerid = property(_get_CallerID, None)

    def _get_TapiCancelled(self):
        return self.GetAXProp('TapiCancelled')
    tapicancelled = property(_get_TapiCancelled, None)

    def _get_Dialing(self):
        return self.GetAXProp('Dialing')
    dialing = property(_get_Dialing, None)

    def _get_TapiState(self):
        return self.GetAXProp('TapiState')
    tapistate = property(_get_TapiState, None)

    def _get_WaveFileName(self):
        return self.GetAXProp('WaveFileName')
    wavefilename = property(_get_WaveFileName, None)

    def _get_WaveState(self):
        return self.GetAXProp('WaveState')
    wavestate = property(_get_WaveState, None)

    def _get_Batch(self):
        return self.GetAXProp('Batch')
    batch = property(_get_Batch, None)

    def _get_BlockErrors(self):
        return self.GetAXProp('BlockErrors')
    blockerrors = property(_get_BlockErrors, None)

    def _get_BlockLength(self):
        return self.GetAXProp('BlockLength')
    blocklength = property(_get_BlockLength, None)

    def _get_BlockNumber(self):
        return self.GetAXProp('BlockNumber')
    blocknumber = property(_get_BlockNumber, None)

    def _get_BytesRemaining(self):
        return self.GetAXProp('BytesRemaining')
    bytesremaining = property(_get_BytesRemaining, None)

    def _get_BytesTransferred(self):
        return self.GetAXProp('BytesTransferred')
    bytestransferred = property(_get_BytesTransferred, None)

    def _get_ElapsedTicks(self):
        return self.GetAXProp('ElapsedTicks')
    elapsedticks = property(_get_ElapsedTicks, None)

    def _get_FileDate(self):
        return self.GetAXProp('FileDate')
    filedate = property(_get_FileDate, None)

    def _get_FileLength(self):
        return self.GetAXProp('FileLength')
    filelength = property(_get_FileLength, None)

    def _get_InProgress(self):
        return self.GetAXProp('InProgress')
    inprogress = property(_get_InProgress, None)

    def _get_InitialPosition(self):
        return self.GetAXProp('InitialPosition')
    initialposition = property(_get_InitialPosition, None)

    def _get_KermitLongBlocks(self):
        return self.GetAXProp('KermitLongBlocks')
    kermitlongblocks = property(_get_KermitLongBlocks, None)

    def _get_KermitWindowsTotal(self):
        return self.GetAXProp('KermitWindowsTotal')
    kermitwindowstotal = property(_get_KermitWindowsTotal, None)

    def _get_KermitWindowsUsed(self):
        return self.GetAXProp('KermitWindowsUsed')
    kermitwindowsused = property(_get_KermitWindowsUsed, None)

    def _get_ProtocolStatus(self):
        return self.GetAXProp('ProtocolStatus')
    protocolstatus = property(_get_ProtocolStatus, None)

    def _get_TotalErrors(self):
        return self.GetAXProp('TotalErrors')
    totalerrors = property(_get_TotalErrors, None)

    def _get_Baud(self):
        return self.GetAXProp('Baud')
    def _set_Baud(self, Baud):
        self.SetAXProp('Baud', Baud)
    baud = property(_get_Baud, _set_Baud)

    def _get_ComNumber(self):
        return self.GetAXProp('ComNumber')
    def _set_ComNumber(self, ComNumber):
        self.SetAXProp('ComNumber', ComNumber)
    comnumber = property(_get_ComNumber, _set_ComNumber)

    def _get_DeviceType(self):
        return self.GetAXProp('DeviceType')
    def _set_DeviceType(self, DeviceType):
        self.SetAXProp('DeviceType', DeviceType)
    devicetype = property(_get_DeviceType, _set_DeviceType)

    def _get_DataBits(self):
        return self.GetAXProp('DataBits')
    def _set_DataBits(self, DataBits):
        self.SetAXProp('DataBits', DataBits)
    databits = property(_get_DataBits, _set_DataBits)

    def _get_DTR(self):
        return self.GetAXProp('DTR')
    def _set_DTR(self, DTR):
        self.SetAXProp('DTR', DTR)
    dtr = property(_get_DTR, _set_DTR)

    def _get_HWFlowUseDTR(self):
        return self.GetAXProp('HWFlowUseDTR')
    def _set_HWFlowUseDTR(self, HWFlowUseDTR):
        self.SetAXProp('HWFlowUseDTR', HWFlowUseDTR)
    hwflowusedtr = property(_get_HWFlowUseDTR, _set_HWFlowUseDTR)

    def _get_HWFlowUseRTS(self):
        return self.GetAXProp('HWFlowUseRTS')
    def _set_HWFlowUseRTS(self, HWFlowUseRTS):
        self.SetAXProp('HWFlowUseRTS', HWFlowUseRTS)
    hwflowuserts = property(_get_HWFlowUseRTS, _set_HWFlowUseRTS)

    def _get_HWFlowRequireDSR(self):
        return self.GetAXProp('HWFlowRequireDSR')
    def _set_HWFlowRequireDSR(self, HWFlowRequireDSR):
        self.SetAXProp('HWFlowRequireDSR', HWFlowRequireDSR)
    hwflowrequiredsr = property(_get_HWFlowRequireDSR, _set_HWFlowRequireDSR)

    def _get_HWFlowRequireCTS(self):
        return self.GetAXProp('HWFlowRequireCTS')
    def _set_HWFlowRequireCTS(self, HWFlowRequireCTS):
        self.SetAXProp('HWFlowRequireCTS', HWFlowRequireCTS)
    hwflowrequirects = property(_get_HWFlowRequireCTS, _set_HWFlowRequireCTS)

    def _get_LogAllHex(self):
        return self.GetAXProp('LogAllHex')
    def _set_LogAllHex(self, LogAllHex):
        self.SetAXProp('LogAllHex', LogAllHex)
    logallhex = property(_get_LogAllHex, _set_LogAllHex)

    def _get_Logging(self):
        return self.GetAXProp('Logging')
    def _set_Logging(self, Logging):
        self.SetAXProp('Logging', Logging)
    logging = property(_get_Logging, _set_Logging)

    def _get_LogHex(self):
        return self.GetAXProp('LogHex')
    def _set_LogHex(self, LogHex):
        self.SetAXProp('LogHex', LogHex)
    loghex = property(_get_LogHex, _set_LogHex)

    def _get_LogName(self):
        return self.GetAXProp('LogName')
    def _set_LogName(self, LogName):
        self.SetAXProp('LogName', LogName)
    logname = property(_get_LogName, _set_LogName)

    def _get_LogSize(self):
        return self.GetAXProp('LogSize')
    def _set_LogSize(self, LogSize):
        self.SetAXProp('LogSize', LogSize)
    logsize = property(_get_LogSize, _set_LogSize)

    def _get_Parity(self):
        return self.GetAXProp('Parity')
    def _set_Parity(self, Parity):
        self.SetAXProp('Parity', Parity)
    parity = property(_get_Parity, _set_Parity)

    def _get_PromptForPort(self):
        return self.GetAXProp('PromptForPort')
    def _set_PromptForPort(self, PromptForPort):
        self.SetAXProp('PromptForPort', PromptForPort)
    promptforport = property(_get_PromptForPort, _set_PromptForPort)

    def _get_RS485Mode(self):
        return self.GetAXProp('RS485Mode')
    def _set_RS485Mode(self, RS485Mode):
        self.SetAXProp('RS485Mode', RS485Mode)
    rs485mode = property(_get_RS485Mode, _set_RS485Mode)

    def _get_RTS(self):
        return self.GetAXProp('RTS')
    def _set_RTS(self, RTS):
        self.SetAXProp('RTS', RTS)
    rts = property(_get_RTS, _set_RTS)

    def _get_StopBits(self):
        return self.GetAXProp('StopBits')
    def _set_StopBits(self, StopBits):
        self.SetAXProp('StopBits', StopBits)
    stopbits = property(_get_StopBits, _set_StopBits)

    def _get_SWFlowOptions(self):
        return self.GetAXProp('SWFlowOptions')
    def _set_SWFlowOptions(self, SWFlowOptions):
        self.SetAXProp('SWFlowOptions', SWFlowOptions)
    swflowoptions = property(_get_SWFlowOptions, _set_SWFlowOptions)

    def _get_XOffChar(self):
        return self.GetAXProp('XOffChar')
    def _set_XOffChar(self, XOffChar):
        self.SetAXProp('XOffChar', XOffChar)
    xoffchar = property(_get_XOffChar, _set_XOffChar)

    def _get_XOnChar(self):
        return self.GetAXProp('XOnChar')
    def _set_XOnChar(self, XOnChar):
        self.SetAXProp('XOnChar', XOnChar)
    xonchar = property(_get_XOnChar, _set_XOnChar)

    def _get_WinsockMode(self):
        return self.GetAXProp('WinsockMode')
    def _set_WinsockMode(self, WinsockMode):
        self.SetAXProp('WinsockMode', WinsockMode)
    winsockmode = property(_get_WinsockMode, _set_WinsockMode)

    def _get_WinsockAddress(self):
        return self.GetAXProp('WinsockAddress')
    def _set_WinsockAddress(self, WinsockAddress):
        self.SetAXProp('WinsockAddress', WinsockAddress)
    winsockaddress = property(_get_WinsockAddress, _set_WinsockAddress)

    def _get_WinsockPort(self):
        return self.GetAXProp('WinsockPort')
    def _set_WinsockPort(self, WinsockPort):
        self.SetAXProp('WinsockPort', WinsockPort)
    winsockport = property(_get_WinsockPort, _set_WinsockPort)

    def _get_WsTelnet(self):
        return self.GetAXProp('WsTelnet')
    def _set_WsTelnet(self, WsTelnet):
        self.SetAXProp('WsTelnet', WsTelnet)
    wstelnet = property(_get_WsTelnet, _set_WsTelnet)

    def _get_AnswerOnRing(self):
        return self.GetAXProp('AnswerOnRing')
    def _set_AnswerOnRing(self, AnswerOnRing):
        self.SetAXProp('AnswerOnRing', AnswerOnRing)
    answeronring = property(_get_AnswerOnRing, _set_AnswerOnRing)

    def _get_EnableVoice(self):
        return self.GetAXProp('EnableVoice')
    def _set_EnableVoice(self, EnableVoice):
        self.SetAXProp('EnableVoice', EnableVoice)
    enablevoice = property(_get_EnableVoice, _set_EnableVoice)

    def _get_MaxAttempts(self):
        return self.GetAXProp('MaxAttempts')
    def _set_MaxAttempts(self, MaxAttempts):
        self.SetAXProp('MaxAttempts', MaxAttempts)
    maxattempts = property(_get_MaxAttempts, _set_MaxAttempts)

    def _get_InterruptWave(self):
        return self.GetAXProp('InterruptWave')
    def _set_InterruptWave(self, InterruptWave):
        self.SetAXProp('InterruptWave', InterruptWave)
    interruptwave = property(_get_InterruptWave, _set_InterruptWave)

    def _get_MaxMessageLength(self):
        return self.GetAXProp('MaxMessageLength')
    def _set_MaxMessageLength(self, MaxMessageLength):
        self.SetAXProp('MaxMessageLength', MaxMessageLength)
    maxmessagelength = property(_get_MaxMessageLength, _set_MaxMessageLength)

    def _get_SelectedDevice(self):
        return self.GetAXProp('SelectedDevice')
    def _set_SelectedDevice(self, SelectedDevice):
        self.SetAXProp('SelectedDevice', SelectedDevice)
    selecteddevice = property(_get_SelectedDevice, _set_SelectedDevice)

    def _get_SilenceThreshold(self):
        return self.GetAXProp('SilenceThreshold')
    def _set_SilenceThreshold(self, SilenceThreshold):
        self.SetAXProp('SilenceThreshold', SilenceThreshold)
    silencethreshold = property(_get_SilenceThreshold, _set_SilenceThreshold)

    def _get_TapiNumber(self):
        return self.GetAXProp('TapiNumber')
    def _set_TapiNumber(self, TapiNumber):
        self.SetAXProp('TapiNumber', TapiNumber)
    tapinumber = property(_get_TapiNumber, _set_TapiNumber)

    def _get_TapiRetryWait(self):
        return self.GetAXProp('TapiRetryWait')
    def _set_TapiRetryWait(self, TapiRetryWait):
        self.SetAXProp('TapiRetryWait', TapiRetryWait)
    tapiretrywait = property(_get_TapiRetryWait, _set_TapiRetryWait)

    def _get_TrimSeconds(self):
        return self.GetAXProp('TrimSeconds')
    def _set_TrimSeconds(self, TrimSeconds):
        self.SetAXProp('TrimSeconds', TrimSeconds)
    trimseconds = property(_get_TrimSeconds, _set_TrimSeconds)

    def _get_UseSoundCard(self):
        return self.GetAXProp('UseSoundCard')
    def _set_UseSoundCard(self, UseSoundCard):
        self.SetAXProp('UseSoundCard', UseSoundCard)
    usesoundcard = property(_get_UseSoundCard, _set_UseSoundCard)

    def _get_CaptureFile(self):
        return self.GetAXProp('CaptureFile')
    def _set_CaptureFile(self, CaptureFile):
        self.SetAXProp('CaptureFile', CaptureFile)
    capturefile = property(_get_CaptureFile, _set_CaptureFile)

    def _get_CaptureMode(self):
        return self.GetAXProp('CaptureMode')
    def _set_CaptureMode(self, CaptureMode):
        self.SetAXProp('CaptureMode', CaptureMode)
    capturemode = property(_get_CaptureMode, _set_CaptureMode)

    def _get_Color(self):
        return self.GetAXProp('Color')
    def _set_Color(self, Color):
        self.SetAXProp('Color', Color)
    color = property(_get_Color, _set_Color)

    def _get_Columns(self):
        return self.GetAXProp('Columns')
    def _set_Columns(self, Columns):
        self.SetAXProp('Columns', Columns)
    columns = property(_get_Columns, _set_Columns)

    def _get_Emulation(self):
        return self.GetAXProp('Emulation')
    def _set_Emulation(self, Emulation):
        self.SetAXProp('Emulation', Emulation)
    emulation = property(_get_Emulation, _set_Emulation)

    def _get_Font(self):
        return self.GetAXProp('Font')
    def _set_Font(self, Font):
        self.SetAXProp('Font', Font)
    font = property(_get_Font, _set_Font)

    def _get_Rows(self):
        return self.GetAXProp('Rows')
    def _set_Rows(self, Rows):
        self.SetAXProp('Rows', Rows)
    rows = property(_get_Rows, _set_Rows)

    def _get_ScrollbackEnabled(self):
        return self.GetAXProp('ScrollbackEnabled')
    def _set_ScrollbackEnabled(self, ScrollbackEnabled):
        self.SetAXProp('ScrollbackEnabled', ScrollbackEnabled)
    scrollbackenabled = property(_get_ScrollbackEnabled, _set_ScrollbackEnabled)

    def _get_ScrollbackRows(self):
        return self.GetAXProp('ScrollbackRows')
    def _set_ScrollbackRows(self, ScrollbackRows):
        self.SetAXProp('ScrollbackRows', ScrollbackRows)
    scrollbackrows = property(_get_ScrollbackRows, _set_ScrollbackRows)

    def _get_TerminalActive(self):
        return self.GetAXProp('TerminalActive')
    def _set_TerminalActive(self, TerminalActive):
        self.SetAXProp('TerminalActive', TerminalActive)
    terminalactive = property(_get_TerminalActive, _set_TerminalActive)

    def _get_TerminalBlinkTime(self):
        return self.GetAXProp('TerminalBlinkTime')
    def _set_TerminalBlinkTime(self, TerminalBlinkTime):
        self.SetAXProp('TerminalBlinkTime', TerminalBlinkTime)
    terminalblinktime = property(_get_TerminalBlinkTime, _set_TerminalBlinkTime)

    def _get_TerminalHalfDuplex(self):
        return self.GetAXProp('TerminalHalfDuplex')
    def _set_TerminalHalfDuplex(self, TerminalHalfDuplex):
        self.SetAXProp('TerminalHalfDuplex', TerminalHalfDuplex)
    terminalhalfduplex = property(_get_TerminalHalfDuplex, _set_TerminalHalfDuplex)

    def _get_TerminalLazyByteDelay(self):
        return self.GetAXProp('TerminalLazyByteDelay')
    def _set_TerminalLazyByteDelay(self, TerminalLazyByteDelay):
        self.SetAXProp('TerminalLazyByteDelay', TerminalLazyByteDelay)
    terminallazybytedelay = property(_get_TerminalLazyByteDelay, _set_TerminalLazyByteDelay)

    def _get_TerminalLazyTimeDelay(self):
        return self.GetAXProp('TerminalLazyTimeDelay')
    def _set_TerminalLazyTimeDelay(self, TerminalLazyTimeDelay):
        self.SetAXProp('TerminalLazyTimeDelay', TerminalLazyTimeDelay)
    terminallazytimedelay = property(_get_TerminalLazyTimeDelay, _set_TerminalLazyTimeDelay)

    def _get_TerminalUseLazyDisplay(self):
        return self.GetAXProp('TerminalUseLazyDisplay')
    def _set_TerminalUseLazyDisplay(self, TerminalUseLazyDisplay):
        self.SetAXProp('TerminalUseLazyDisplay', TerminalUseLazyDisplay)
    terminaluselazydisplay = property(_get_TerminalUseLazyDisplay, _set_TerminalUseLazyDisplay)

    def _get_TerminalWantAllKeys(self):
        return self.GetAXProp('TerminalWantAllKeys')
    def _set_TerminalWantAllKeys(self, TerminalWantAllKeys):
        self.SetAXProp('TerminalWantAllKeys', TerminalWantAllKeys)
    terminalwantallkeys = property(_get_TerminalWantAllKeys, _set_TerminalWantAllKeys)

    def _get_Version(self):
        return self.GetAXProp('Version')
    def _set_Version(self, Version):
        self.SetAXProp('Version', Version)
    version = property(_get_Version, _set_Version)

    def _get_Visible(self):
        return self.GetAXProp('Visible')
    def _set_Visible(self, Visible):
        self.SetAXProp('Visible', Visible)
    visible = property(_get_Visible, _set_Visible)

    def _get_DataTriggerString(self):
        return self.GetAXProp('DataTriggerString')
    def _set_DataTriggerString(self, DataTriggerString):
        self.SetAXProp('DataTriggerString', DataTriggerString)
    datatriggerstring = property(_get_DataTriggerString, _set_DataTriggerString)

    def _get_ProtocolStatusDisplay(self):
        return self.GetAXProp('ProtocolStatusDisplay')
    def _set_ProtocolStatusDisplay(self, ProtocolStatusDisplay):
        self.SetAXProp('ProtocolStatusDisplay', ProtocolStatusDisplay)
    protocolstatusdisplay = property(_get_ProtocolStatusDisplay, _set_ProtocolStatusDisplay)

    def _get_Protocol(self):
        return self.GetAXProp('Protocol')
    def _set_Protocol(self, Protocol):
        self.SetAXProp('Protocol', Protocol)
    protocol = property(_get_Protocol, _set_Protocol)

    def _get_AbortNoCarrier(self):
        return self.GetAXProp('AbortNoCarrier')
    def _set_AbortNoCarrier(self, AbortNoCarrier):
        self.SetAXProp('AbortNoCarrier', AbortNoCarrier)
    abortnocarrier = property(_get_AbortNoCarrier, _set_AbortNoCarrier)

    def _get_AsciiCharDelay(self):
        return self.GetAXProp('AsciiCharDelay')
    def _set_AsciiCharDelay(self, AsciiCharDelay):
        self.SetAXProp('AsciiCharDelay', AsciiCharDelay)
    asciichardelay = property(_get_AsciiCharDelay, _set_AsciiCharDelay)

    def _get_AsciiCRTranslation(self):
        return self.GetAXProp('AsciiCRTranslation')
    def _set_AsciiCRTranslation(self, AsciiCRTranslation):
        self.SetAXProp('AsciiCRTranslation', AsciiCRTranslation)
    asciicrtranslation = property(_get_AsciiCRTranslation, _set_AsciiCRTranslation)

    def _get_AsciiEOFTimeout(self):
        return self.GetAXProp('AsciiEOFTimeout')
    def _set_AsciiEOFTimeout(self, AsciiEOFTimeout):
        self.SetAXProp('AsciiEOFTimeout', AsciiEOFTimeout)
    asciieoftimeout = property(_get_AsciiEOFTimeout, _set_AsciiEOFTimeout)

    def _get_AsciiEOLChar(self):
        return self.GetAXProp('AsciiEOLChar')
    def _set_AsciiEOLChar(self, AsciiEOLChar):
        self.SetAXProp('AsciiEOLChar', AsciiEOLChar)
    asciieolchar = property(_get_AsciiEOLChar, _set_AsciiEOLChar)

    def _get_AsciiLFTranslation(self):
        return self.GetAXProp('AsciiLFTranslation')
    def _set_AsciiLFTranslation(self, AsciiLFTranslation):
        self.SetAXProp('AsciiLFTranslation', AsciiLFTranslation)
    asciilftranslation = property(_get_AsciiLFTranslation, _set_AsciiLFTranslation)

    def _get_AsciiLineDelay(self):
        return self.GetAXProp('AsciiLineDelay')
    def _set_AsciiLineDelay(self, AsciiLineDelay):
        self.SetAXProp('AsciiLineDelay', AsciiLineDelay)
    asciilinedelay = property(_get_AsciiLineDelay, _set_AsciiLineDelay)

    def _get_AsciiSuppressCtrlZ(self):
        return self.GetAXProp('AsciiSuppressCtrlZ')
    def _set_AsciiSuppressCtrlZ(self, AsciiSuppressCtrlZ):
        self.SetAXProp('AsciiSuppressCtrlZ', AsciiSuppressCtrlZ)
    asciisuppressctrlz = property(_get_AsciiSuppressCtrlZ, _set_AsciiSuppressCtrlZ)

    def _get_BlockCheckMethod(self):
        return self.GetAXProp('BlockCheckMethod')
    def _set_BlockCheckMethod(self, BlockCheckMethod):
        self.SetAXProp('BlockCheckMethod', BlockCheckMethod)
    blockcheckmethod = property(_get_BlockCheckMethod, _set_BlockCheckMethod)

    def _get_FinishWait(self):
        return self.GetAXProp('FinishWait')
    def _set_FinishWait(self, FinishWait):
        self.SetAXProp('FinishWait', FinishWait)
    finishwait = property(_get_FinishWait, _set_FinishWait)

    def _get_HandshakeRetry(self):
        return self.GetAXProp('HandshakeRetry')
    def _set_HandshakeRetry(self, HandshakeRetry):
        self.SetAXProp('HandshakeRetry', HandshakeRetry)
    handshakeretry = property(_get_HandshakeRetry, _set_HandshakeRetry)

    def _get_HandshakeWait(self):
        return self.GetAXProp('HandshakeWait')
    def _set_HandshakeWait(self, HandshakeWait):
        self.SetAXProp('HandshakeWait', HandshakeWait)
    handshakewait = property(_get_HandshakeWait, _set_HandshakeWait)

    def _get_HonorDirectory(self):
        return self.GetAXProp('HonorDirectory')
    def _set_HonorDirectory(self, HonorDirectory):
        self.SetAXProp('HonorDirectory', HonorDirectory)
    honordirectory = property(_get_HonorDirectory, _set_HonorDirectory)

    def _get_IncludeDirectory(self):
        return self.GetAXProp('IncludeDirectory')
    def _set_IncludeDirectory(self, IncludeDirectory):
        self.SetAXProp('IncludeDirectory', IncludeDirectory)
    includedirectory = property(_get_IncludeDirectory, _set_IncludeDirectory)

    def _get_KermitCtlPrefix(self):
        return self.GetAXProp('KermitCtlPrefix')
    def _set_KermitCtlPrefix(self, KermitCtlPrefix):
        self.SetAXProp('KermitCtlPrefix', KermitCtlPrefix)
    kermitctlprefix = property(_get_KermitCtlPrefix, _set_KermitCtlPrefix)

    def _get_KermitHighbitPrefix(self):
        return self.GetAXProp('KermitHighbitPrefix')
    def _set_KermitHighbitPrefix(self, KermitHighbitPrefix):
        self.SetAXProp('KermitHighbitPrefix', KermitHighbitPrefix)
    kermithighbitprefix = property(_get_KermitHighbitPrefix, _set_KermitHighbitPrefix)

    def _get_KermitMaxLen(self):
        return self.GetAXProp('KermitMaxLen')
    def _set_KermitMaxLen(self, KermitMaxLen):
        self.SetAXProp('KermitMaxLen', KermitMaxLen)
    kermitmaxlen = property(_get_KermitMaxLen, _set_KermitMaxLen)

    def _get_KermitMaxWindows(self):
        return self.GetAXProp('KermitMaxWindows')
    def _set_KermitMaxWindows(self, KermitMaxWindows):
        self.SetAXProp('KermitMaxWindows', KermitMaxWindows)
    kermitmaxwindows = property(_get_KermitMaxWindows, _set_KermitMaxWindows)

    def _get_KermitPadCharacter(self):
        return self.GetAXProp('KermitPadCharacter')
    def _set_KermitPadCharacter(self, KermitPadCharacter):
        self.SetAXProp('KermitPadCharacter', KermitPadCharacter)
    kermitpadcharacter = property(_get_KermitPadCharacter, _set_KermitPadCharacter)

    def _get_KermitPadCount(self):
        return self.GetAXProp('KermitPadCount')
    def _set_KermitPadCount(self, KermitPadCount):
        self.SetAXProp('KermitPadCount', KermitPadCount)
    kermitpadcount = property(_get_KermitPadCount, _set_KermitPadCount)

    def _get_KermitRepeatPrefix(self):
        return self.GetAXProp('KermitRepeatPrefix')
    def _set_KermitRepeatPrefix(self, KermitRepeatPrefix):
        self.SetAXProp('KermitRepeatPrefix', KermitRepeatPrefix)
    kermitrepeatprefix = property(_get_KermitRepeatPrefix, _set_KermitRepeatPrefix)

    def _get_KermitSWCTurnDelay(self):
        return self.GetAXProp('KermitSWCTurnDelay')
    def _set_KermitSWCTurnDelay(self, KermitSWCTurnDelay):
        self.SetAXProp('KermitSWCTurnDelay', KermitSWCTurnDelay)
    kermitswcturndelay = property(_get_KermitSWCTurnDelay, _set_KermitSWCTurnDelay)

    def _get_KermitTerminator(self):
        return self.GetAXProp('KermitTerminator')
    def _set_KermitTerminator(self, KermitTerminator):
        self.SetAXProp('KermitTerminator', KermitTerminator)
    kermitterminator = property(_get_KermitTerminator, _set_KermitTerminator)

    def _get_KermitTimeoutSecs(self):
        return self.GetAXProp('KermitTimeoutSecs')
    def _set_KermitTimeoutSecs(self, KermitTimeoutSecs):
        self.SetAXProp('KermitTimeoutSecs', KermitTimeoutSecs)
    kermittimeoutsecs = property(_get_KermitTimeoutSecs, _set_KermitTimeoutSecs)

    def _get_ReceiveDirectory(self):
        return self.GetAXProp('ReceiveDirectory')
    def _set_ReceiveDirectory(self, ReceiveDirectory):
        self.SetAXProp('ReceiveDirectory', ReceiveDirectory)
    receivedirectory = property(_get_ReceiveDirectory, _set_ReceiveDirectory)

    def _get_ReceiveFileName(self):
        return self.GetAXProp('ReceiveFileName')
    def _set_ReceiveFileName(self, ReceiveFileName):
        self.SetAXProp('ReceiveFileName', ReceiveFileName)
    receivefilename = property(_get_ReceiveFileName, _set_ReceiveFileName)

    def _get_RTSLowForWrite(self):
        return self.GetAXProp('RTSLowForWrite')
    def _set_RTSLowForWrite(self, RTSLowForWrite):
        self.SetAXProp('RTSLowForWrite', RTSLowForWrite)
    rtslowforwrite = property(_get_RTSLowForWrite, _set_RTSLowForWrite)

    def _get_SendFileName(self):
        return self.GetAXProp('SendFileName')
    def _set_SendFileName(self, SendFileName):
        self.SetAXProp('SendFileName', SendFileName)
    sendfilename = property(_get_SendFileName, _set_SendFileName)

    def _get_StatusInterval(self):
        return self.GetAXProp('StatusInterval')
    def _set_StatusInterval(self, StatusInterval):
        self.SetAXProp('StatusInterval', StatusInterval)
    statusinterval = property(_get_StatusInterval, _set_StatusInterval)

    def _get_TransmitTimeout(self):
        return self.GetAXProp('TransmitTimeout')
    def _set_TransmitTimeout(self, TransmitTimeout):
        self.SetAXProp('TransmitTimeout', TransmitTimeout)
    transmittimeout = property(_get_TransmitTimeout, _set_TransmitTimeout)

    def _get_UpcaseFileNames(self):
        return self.GetAXProp('UpcaseFileNames')
    def _set_UpcaseFileNames(self, UpcaseFileNames):
        self.SetAXProp('UpcaseFileNames', UpcaseFileNames)
    upcasefilenames = property(_get_UpcaseFileNames, _set_UpcaseFileNames)

    def _get_WriteFailAction(self):
        return self.GetAXProp('WriteFailAction')
    def _set_WriteFailAction(self, WriteFailAction):
        self.SetAXProp('WriteFailAction', WriteFailAction)
    writefailaction = property(_get_WriteFailAction, _set_WriteFailAction)

    def _get_XYmodemBlockWait(self):
        return self.GetAXProp('XYmodemBlockWait')
    def _set_XYmodemBlockWait(self, XYmodemBlockWait):
        self.SetAXProp('XYmodemBlockWait', XYmodemBlockWait)
    xymodemblockwait = property(_get_XYmodemBlockWait, _set_XYmodemBlockWait)

    def _get_Zmodem8K(self):
        return self.GetAXProp('Zmodem8K')
    def _set_Zmodem8K(self, Zmodem8K):
        self.SetAXProp('Zmodem8K', Zmodem8K)
    zmodem8k = property(_get_Zmodem8K, _set_Zmodem8K)

    def _get_ZmodemFileOptions(self):
        return self.GetAXProp('ZmodemFileOptions')
    def _set_ZmodemFileOptions(self, ZmodemFileOptions):
        self.SetAXProp('ZmodemFileOptions', ZmodemFileOptions)
    zmodemfileoptions = property(_get_ZmodemFileOptions, _set_ZmodemFileOptions)

    def _get_ZmodemFinishRetry(self):
        return self.GetAXProp('ZmodemFinishRetry')
    def _set_ZmodemFinishRetry(self, ZmodemFinishRetry):
        self.SetAXProp('ZmodemFinishRetry', ZmodemFinishRetry)
    zmodemfinishretry = property(_get_ZmodemFinishRetry, _set_ZmodemFinishRetry)

    def _get_ZmodemOptionOverride(self):
        return self.GetAXProp('ZmodemOptionOverride')
    def _set_ZmodemOptionOverride(self, ZmodemOptionOverride):
        self.SetAXProp('ZmodemOptionOverride', ZmodemOptionOverride)
    zmodemoptionoverride = property(_get_ZmodemOptionOverride, _set_ZmodemOptionOverride)

    def _get_ZmodemRecover(self):
        return self.GetAXProp('ZmodemRecover')
    def _set_ZmodemRecover(self, ZmodemRecover):
        self.SetAXProp('ZmodemRecover', ZmodemRecover)
    zmodemrecover = property(_get_ZmodemRecover, _set_ZmodemRecover)

    def _get_ZmodemSkipNoFile(self):
        return self.GetAXProp('ZmodemSkipNoFile')
    def _set_ZmodemSkipNoFile(self, ZmodemSkipNoFile):
        self.SetAXProp('ZmodemSkipNoFile', ZmodemSkipNoFile)
    zmodemskipnofile = property(_get_ZmodemSkipNoFile, _set_ZmodemSkipNoFile)

    def _get_Caption(self):
        return self.GetAXProp('Caption')
    def _set_Caption(self, Caption):
        self.SetAXProp('Caption', Caption)
    caption = property(_get_Caption, _set_Caption)

    def _get_CaptionAlignment(self):
        return self.GetAXProp('CaptionAlignment')
    def _set_CaptionAlignment(self, CaptionAlignment):
        self.SetAXProp('CaptionAlignment', CaptionAlignment)
    captionalignment = property(_get_CaptionAlignment, _set_CaptionAlignment)

    def _get_CaptionWidth(self):
        return self.GetAXProp('CaptionWidth')
    def _set_CaptionWidth(self, CaptionWidth):
        self.SetAXProp('CaptionWidth', CaptionWidth)
    captionwidth = property(_get_CaptionWidth, _set_CaptionWidth)

    def _get_LightWidth(self):
        return self.GetAXProp('LightWidth')
    def _set_LightWidth(self, LightWidth):
        self.SetAXProp('LightWidth', LightWidth)
    lightwidth = property(_get_LightWidth, _set_LightWidth)

    def _get_LightsLitColor(self):
        return self.GetAXProp('LightsLitColor')
    def _set_LightsLitColor(self, LightsLitColor):
        self.SetAXProp('LightsLitColor', LightsLitColor)
    lightslitcolor = property(_get_LightsLitColor, _set_LightsLitColor)

    def _get_LightsNotLitColor(self):
        return self.GetAXProp('LightsNotLitColor')
    def _set_LightsNotLitColor(self, LightsNotLitColor):
        self.SetAXProp('LightsNotLitColor', LightsNotLitColor)
    lightsnotlitcolor = property(_get_LightsNotLitColor, _set_LightsNotLitColor)

    def _get_ShowLightCaptions(self):
        return self.GetAXProp('ShowLightCaptions')
    def _set_ShowLightCaptions(self, ShowLightCaptions):
        self.SetAXProp('ShowLightCaptions', ShowLightCaptions)
    showlightcaptions = property(_get_ShowLightCaptions, _set_ShowLightCaptions)

    def _get_ShowLights(self):
        return self.GetAXProp('ShowLights')
    def _set_ShowLights(self, ShowLights):
        self.SetAXProp('ShowLights', ShowLights)
    showlights = property(_get_ShowLights, _set_ShowLights)

    def _get_ShowStatusBar(self):
        return self.GetAXProp('ShowStatusBar')
    def _set_ShowStatusBar(self, ShowStatusBar):
        self.SetAXProp('ShowStatusBar', ShowStatusBar)
    showstatusbar = property(_get_ShowStatusBar, _set_ShowStatusBar)

    def _get_ShowToolBar(self):
        return self.GetAXProp('ShowToolBar')
    def _set_ShowToolBar(self, ShowToolBar):
        self.SetAXProp('ShowToolBar', ShowToolBar)
    showtoolbar = property(_get_ShowToolBar, _set_ShowToolBar)

    def _get_ShowDeviceSelButton(self):
        return self.GetAXProp('ShowDeviceSelButton')
    def _set_ShowDeviceSelButton(self, ShowDeviceSelButton):
        self.SetAXProp('ShowDeviceSelButton', ShowDeviceSelButton)
    showdeviceselbutton = property(_get_ShowDeviceSelButton, _set_ShowDeviceSelButton)

    def _get_ShowConnectButtons(self):
        return self.GetAXProp('ShowConnectButtons')
    def _set_ShowConnectButtons(self, ShowConnectButtons):
        self.SetAXProp('ShowConnectButtons', ShowConnectButtons)
    showconnectbuttons = property(_get_ShowConnectButtons, _set_ShowConnectButtons)

    def _get_ShowProtocolButtons(self):
        return self.GetAXProp('ShowProtocolButtons')
    def _set_ShowProtocolButtons(self, ShowProtocolButtons):
        self.SetAXProp('ShowProtocolButtons', ShowProtocolButtons)
    showprotocolbuttons = property(_get_ShowProtocolButtons, _set_ShowProtocolButtons)

    def _get_ShowTerminalButtons(self):
        return self.GetAXProp('ShowTerminalButtons')
    def _set_ShowTerminalButtons(self, ShowTerminalButtons):
        self.SetAXProp('ShowTerminalButtons', ShowTerminalButtons)
    showterminalbuttons = property(_get_ShowTerminalButtons, _set_ShowTerminalButtons)

    def _get_DoubleBuffered(self):
        return self.GetAXProp('DoubleBuffered')
    def _set_DoubleBuffered(self, DoubleBuffered):
        self.SetAXProp('DoubleBuffered', DoubleBuffered)
    doublebuffered = property(_get_DoubleBuffered, _set_DoubleBuffered)

    def _get_VisibleDockClientCount(self):
        return self.GetAXProp('VisibleDockClientCount')
    visibledockclientcount = property(_get_VisibleDockClientCount, None)

    def _get_Enabled(self):
        return self.GetAXProp('Enabled')
    def _set_Enabled(self, Enabled):
        self.SetAXProp('Enabled', Enabled)
    enabled = property(_get_Enabled, _set_Enabled)

    def _get_Cursor(self):
        return self.GetAXProp('Cursor')
    def _set_Cursor(self, Cursor):
        self.SetAXProp('Cursor', Cursor)
    cursor = property(_get_Cursor, _set_Cursor)

    def _get_TapiStatusDisplay(self):
        return self.GetAXProp('TapiStatusDisplay')
    def _set_TapiStatusDisplay(self, TapiStatusDisplay):
        self.SetAXProp('TapiStatusDisplay', TapiStatusDisplay)
    tapistatusdisplay = property(_get_TapiStatusDisplay, _set_TapiStatusDisplay)

    def _get_CDHolding(self):
        return self.GetAXProp('CDHolding')
    cdholding = property(_get_CDHolding, None)

    def _get_CommPort(self):
        return self.GetAXProp('CommPort')
    def _set_CommPort(self, CommPort):
        self.SetAXProp('CommPort', CommPort)
    commport = property(_get_CommPort, _set_CommPort)

    def _get_CTSHolding(self):
        return self.GetAXProp('CTSHolding')
    ctsholding = property(_get_CTSHolding, None)

    def _get_DSRHolding(self):
        return self.GetAXProp('DSRHolding')
    dsrholding = property(_get_DSRHolding, None)

    def _get_DTREnable(self):
        return self.GetAXProp('DTREnable')
    def _set_DTREnable(self, DTREnable):
        self.SetAXProp('DTREnable', DTREnable)
    dtrenable = property(_get_DTREnable, _set_DTREnable)

    def _get_Handshaking(self):
        return self.GetAXProp('Handshaking')
    def _set_Handshaking(self, Handshaking):
        self.SetAXProp('Handshaking', Handshaking)
    handshaking = property(_get_Handshaking, _set_Handshaking)

    def _get_InBufferSize(self):
        return self.GetAXProp('InBufferSize')
    def _set_InBufferSize(self, InBufferSize):
        self.SetAXProp('InBufferSize', InBufferSize)
    inbuffersize = property(_get_InBufferSize, _set_InBufferSize)

    def _get_InBufferCount(self):
        return self.GetAXProp('InBufferCount')
    inbuffercount = property(_get_InBufferCount, None)

    def _set_Break(self, Break):
        self.SetAXProp('Break', Break)
    break_ = property(None, _set_Break)

    def _get_OutBufferSize(self):
        return self.GetAXProp('OutBufferSize')
    def _set_OutBufferSize(self, OutBufferSize):
        self.SetAXProp('OutBufferSize', OutBufferSize)
    outbuffersize = property(_get_OutBufferSize, _set_OutBufferSize)

    def _get_OutBufferCount(self):
        return self.GetAXProp('OutBufferCount')
    outbuffercount = property(_get_OutBufferCount, None)

    def _get_RTSEnable(self):
        return self.GetAXProp('RTSEnable')
    def _set_RTSEnable(self, RTSEnable):
        self.SetAXProp('RTSEnable', RTSEnable)
    rtsenable = property(_get_RTSEnable, _set_RTSEnable)

    def _get_Settings(self):
        return self.GetAXProp('Settings')
    def _set_Settings(self, Settings):
        self.SetAXProp('Settings', Settings)
    settings = property(_get_Settings, _set_Settings)

    def _set_Output(self, Output):
        self.SetAXProp('Output', Output)
    output = property(None, _set_Output)

    def _get_Input(self):
        return self.GetAXProp('Input')
    input = property(_get_Input, None)

    def _get_InputMode(self):
        return self.GetAXProp('InputMode')
    def _set_InputMode(self, InputMode):
        self.SetAXProp('InputMode', InputMode)
    inputmode = property(_get_InputMode, _set_InputMode)

    def _get_InputLen(self):
        return self.GetAXProp('InputLen')
    def _set_InputLen(self, InputLen):
        self.SetAXProp('InputLen', InputLen)
    inputlen = property(_get_InputLen, _set_InputLen)

    def _get_CommEvent(self):
        return self.GetAXProp('CommEvent')
    commevent = property(_get_CommEvent, None)

    def _get_MSCommCompatible(self):
        return self.GetAXProp('MSCommCompatible')
    def _set_MSCommCompatible(self, MSCommCompatible):
        self.SetAXProp('MSCommCompatible', MSCommCompatible)
    mscommcompatible = property(_get_MSCommCompatible, _set_MSCommCompatible)

    def _get_RTThreshold(self):
        return self.GetAXProp('RTThreshold')
    def _set_RTThreshold(self, RTThreshold):
        self.SetAXProp('RTThreshold', RTThreshold)
    rtthreshold = property(_get_RTThreshold, _set_RTThreshold)

    def _get_SThreshold(self):
        return self.GetAXProp('SThreshold')
    def _set_SThreshold(self, SThreshold):
        self.SetAXProp('SThreshold', SThreshold)
    sthreshold = property(_get_SThreshold, _set_SThreshold)

    def _get_TapiFailCode(self):
        return self.GetAXProp('TapiFailCode')
    tapifailcode = property(_get_TapiFailCode, None)

    def _get_WsLocalVersion(self):
        return self.GetAXProp('WsLocalVersion')
    wslocalversion = property(_get_WsLocalVersion, None)

    def _get_WsLocalHighVersion(self):
        return self.GetAXProp('WsLocalHighVersion')
    wslocalhighversion = property(_get_WsLocalHighVersion, None)

    def _get_WsLocalDescription(self):
        return self.GetAXProp('WsLocalDescription')
    wslocaldescription = property(_get_WsLocalDescription, None)

    def _get_WsLocalSystemStatus(self):
        return self.GetAXProp('WsLocalSystemStatus')
    wslocalsystemstatus = property(_get_WsLocalSystemStatus, None)

    def _get_WsLocalMaxSockets(self):
        return self.GetAXProp('WsLocalMaxSockets')
    wslocalmaxsockets = property(_get_WsLocalMaxSockets, None)

    def _get_WsLocalHostName(self):
        return self.GetAXProp('WsLocalHostName')
    wslocalhostname = property(_get_WsLocalHostName, None)

    def _get_WsLocalAddress(self):
        return self.GetAXProp('WsLocalAddress')
    wslocaladdress = property(_get_WsLocalAddress, None)

    def _get_FTPAccount(self):
        return self.GetAXProp('FTPAccount')
    def _set_FTPAccount(self, FTPAccount):
        self.SetAXProp('FTPAccount', FTPAccount)
    ftpaccount = property(_get_FTPAccount, _set_FTPAccount)

    def _get_FTPConnected(self):
        return self.GetAXProp('FTPConnected')
    ftpconnected = property(_get_FTPConnected, None)

    def _get_FTPConnectTimeout(self):
        return self.GetAXProp('FTPConnectTimeout')
    def _set_FTPConnectTimeout(self, FTPConnectTimeout):
        self.SetAXProp('FTPConnectTimeout', FTPConnectTimeout)
    ftpconnecttimeout = property(_get_FTPConnectTimeout, _set_FTPConnectTimeout)

    def _get_FTPFileLength(self):
        return self.GetAXProp('FTPFileLength')
    ftpfilelength = property(_get_FTPFileLength, None)

    def _get_FTPFileType(self):
        return self.GetAXProp('FTPFileType')
    def _set_FTPFileType(self, FTPFileType):
        self.SetAXProp('FTPFileType', FTPFileType)
    ftpfiletype = property(_get_FTPFileType, _set_FTPFileType)

    def _get_FTPInProgress(self):
        return self.GetAXProp('FTPInProgress')
    ftpinprogress = property(_get_FTPInProgress, None)

    def _get_FTPPassword(self):
        return self.GetAXProp('FTPPassword')
    def _set_FTPPassword(self, FTPPassword):
        self.SetAXProp('FTPPassword', FTPPassword)
    ftppassword = property(_get_FTPPassword, _set_FTPPassword)

    def _get_FTPRestartAt(self):
        return self.GetAXProp('FTPRestartAt')
    def _set_FTPRestartAt(self, FTPRestartAt):
        self.SetAXProp('FTPRestartAt', FTPRestartAt)
    ftprestartat = property(_get_FTPRestartAt, _set_FTPRestartAt)

    def _get_FTPServerAddress(self):
        return self.GetAXProp('FTPServerAddress')
    def _set_FTPServerAddress(self, FTPServerAddress):
        self.SetAXProp('FTPServerAddress', FTPServerAddress)
    ftpserveraddress = property(_get_FTPServerAddress, _set_FTPServerAddress)

    def _get_FTPTransferTimeout(self):
        return self.GetAXProp('FTPTransferTimeout')
    def _set_FTPTransferTimeout(self, FTPTransferTimeout):
        self.SetAXProp('FTPTransferTimeout', FTPTransferTimeout)
    ftptransfertimeout = property(_get_FTPTransferTimeout, _set_FTPTransferTimeout)

    def _get_FTPUserLoggedIn(self):
        return self.GetAXProp('FTPUserLoggedIn')
    ftpuserloggedin = property(_get_FTPUserLoggedIn, None)

    def _get_FTPUserName(self):
        return self.GetAXProp('FTPUserName')
    def _set_FTPUserName(self, FTPUserName):
        self.SetAXProp('FTPUserName', FTPUserName)
    ftpusername = property(_get_FTPUserName, _set_FTPUserName)

    def _get_FTPState(self):
        return self.GetAXProp('FTPState')
    ftpstate = property(_get_FTPState, None)

    def _get_FTPBytesTransferred(self):
        return self.GetAXProp('FTPBytesTransferred')
    ftpbytestransferred = property(_get_FTPBytesTransferred, None)

    def _get_FilterTapiDevices(self):
        return self.GetAXProp('FilterTapiDevices')
    def _set_FilterTapiDevices(self, FilterTapiDevices):
        self.SetAXProp('FilterTapiDevices', FilterTapiDevices)
    filtertapidevices = property(_get_FilterTapiDevices, _set_FilterTapiDevices)


#  PROPERTIES
#  --------------------
#  cts
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  dcd
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  dsr
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  flowstate
#      type:unsupported type 29  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  inbuffused
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  inbufffree
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  lineerror
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  outbufffree
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  outbuffused
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  ri
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  tapiattempt
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  callerid
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  tapicancelled
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  dialing
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  tapistate
#      type:unsupported type 29  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  wavefilename
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  wavestate
#      type:unsupported type 29  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  batch
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  blockerrors
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  blocklength
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  blocknumber
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  bytesremaining
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  bytestransferred
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  elapsedticks
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  filedate
#      type:double  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  filelength
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  inprogress
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  initialposition
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  kermitlongblocks
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  kermitwindowstotal
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  kermitwindowsused
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  protocolstatus
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  totalerrors
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  baud
#      type:int  arg:int  canGet:True  canSet:True
#  
#  comnumber
#      type:int  arg:int  canGet:True  canSet:True
#  
#  devicetype
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  databits
#      type:int  arg:int  canGet:True  canSet:True
#  
#  dtr
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  hwflowusedtr
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  hwflowuserts
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  hwflowrequiredsr
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  hwflowrequirects
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  logallhex
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  logging
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  loghex
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  logname
#      type:string  arg:string  canGet:True  canSet:True
#  
#  logsize
#      type:int  arg:int  canGet:True  canSet:True
#  
#  parity
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  promptforport
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  rs485mode
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  rts
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  stopbits
#      type:int  arg:int  canGet:True  canSet:True
#  
#  swflowoptions
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  xoffchar
#      type:int  arg:int  canGet:True  canSet:True
#  
#  xonchar
#      type:int  arg:int  canGet:True  canSet:True
#  
#  winsockmode
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  winsockaddress
#      type:string  arg:string  canGet:True  canSet:True
#  
#  winsockport
#      type:string  arg:string  canGet:True  canSet:True
#  
#  wstelnet
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  answeronring
#      type:int  arg:int  canGet:True  canSet:True
#  
#  enablevoice
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  maxattempts
#      type:int  arg:int  canGet:True  canSet:True
#  
#  interruptwave
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  maxmessagelength
#      type:int  arg:int  canGet:True  canSet:True
#  
#  selecteddevice
#      type:string  arg:string  canGet:True  canSet:True
#  
#  silencethreshold
#      type:int  arg:int  canGet:True  canSet:True
#  
#  tapinumber
#      type:string  arg:string  canGet:True  canSet:True
#  
#  tapiretrywait
#      type:int  arg:int  canGet:True  canSet:True
#  
#  trimseconds
#      type:int  arg:int  canGet:True  canSet:True
#  
#  usesoundcard
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  capturefile
#      type:string  arg:string  canGet:True  canSet:True
#  
#  capturemode
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  color
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  columns
#      type:int  arg:int  canGet:True  canSet:True
#  
#  emulation
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  font
#      type:unsupported type 29  arg:unsupported type 26  canGet:True  canSet:True
#  
#  rows
#      type:int  arg:int  canGet:True  canSet:True
#  
#  scrollbackenabled
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  scrollbackrows
#      type:int  arg:int  canGet:True  canSet:True
#  
#  terminalactive
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  terminalblinktime
#      type:int  arg:int  canGet:True  canSet:True
#  
#  terminalhalfduplex
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  terminallazybytedelay
#      type:int  arg:int  canGet:True  canSet:True
#  
#  terminallazytimedelay
#      type:int  arg:int  canGet:True  canSet:True
#  
#  terminaluselazydisplay
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  terminalwantallkeys
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  version
#      type:string  arg:string  canGet:True  canSet:True
#  
#  visible
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  datatriggerstring
#      type:string  arg:string  canGet:True  canSet:True
#  
#  protocolstatusdisplay
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  protocol
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  abortnocarrier
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  asciichardelay
#      type:int  arg:int  canGet:True  canSet:True
#  
#  asciicrtranslation
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  asciieoftimeout
#      type:int  arg:int  canGet:True  canSet:True
#  
#  asciieolchar
#      type:int  arg:int  canGet:True  canSet:True
#  
#  asciilftranslation
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  asciilinedelay
#      type:int  arg:int  canGet:True  canSet:True
#  
#  asciisuppressctrlz
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  blockcheckmethod
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  finishwait
#      type:int  arg:int  canGet:True  canSet:True
#  
#  handshakeretry
#      type:int  arg:int  canGet:True  canSet:True
#  
#  handshakewait
#      type:int  arg:int  canGet:True  canSet:True
#  
#  honordirectory
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  includedirectory
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  kermitctlprefix
#      type:int  arg:int  canGet:True  canSet:True
#  
#  kermithighbitprefix
#      type:int  arg:int  canGet:True  canSet:True
#  
#  kermitmaxlen
#      type:int  arg:int  canGet:True  canSet:True
#  
#  kermitmaxwindows
#      type:int  arg:int  canGet:True  canSet:True
#  
#  kermitpadcharacter
#      type:int  arg:int  canGet:True  canSet:True
#  
#  kermitpadcount
#      type:int  arg:int  canGet:True  canSet:True
#  
#  kermitrepeatprefix
#      type:int  arg:int  canGet:True  canSet:True
#  
#  kermitswcturndelay
#      type:int  arg:int  canGet:True  canSet:True
#  
#  kermitterminator
#      type:int  arg:int  canGet:True  canSet:True
#  
#  kermittimeoutsecs
#      type:int  arg:int  canGet:True  canSet:True
#  
#  receivedirectory
#      type:string  arg:string  canGet:True  canSet:True
#  
#  receivefilename
#      type:string  arg:string  canGet:True  canSet:True
#  
#  rtslowforwrite
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  sendfilename
#      type:string  arg:string  canGet:True  canSet:True
#  
#  statusinterval
#      type:int  arg:int  canGet:True  canSet:True
#  
#  transmittimeout
#      type:int  arg:int  canGet:True  canSet:True
#  
#  upcasefilenames
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  writefailaction
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  xymodemblockwait
#      type:int  arg:int  canGet:True  canSet:True
#  
#  zmodem8k
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  zmodemfileoptions
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  zmodemfinishretry
#      type:int  arg:int  canGet:True  canSet:True
#  
#  zmodemoptionoverride
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  zmodemrecover
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  zmodemskipnofile
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  caption
#      type:string  arg:string  canGet:True  canSet:True
#  
#  captionalignment
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  captionwidth
#      type:int  arg:int  canGet:True  canSet:True
#  
#  lightwidth
#      type:int  arg:int  canGet:True  canSet:True
#  
#  lightslitcolor
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  lightsnotlitcolor
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  showlightcaptions
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  showlights
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  showstatusbar
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  showtoolbar
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  showdeviceselbutton
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  showconnectbuttons
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  showprotocolbuttons
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  showterminalbuttons
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  doublebuffered
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  visibledockclientcount
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  enabled
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  cursor
#      type:int  arg:int  canGet:True  canSet:True
#  
#  tapistatusdisplay
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  cdholding
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  commport
#      type:int  arg:int  canGet:True  canSet:True
#  
#  ctsholding
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  dsrholding
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  dtrenable
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  handshaking
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  inbuffersize
#      type:int  arg:int  canGet:True  canSet:True
#  
#  inbuffercount
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  break_
#      type:VT_EMPTY  arg:bool  canGet:False  canSet:True
#  
#  outbuffersize
#      type:int  arg:int  canGet:True  canSet:True
#  
#  outbuffercount
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  rtsenable
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  settings
#      type:string  arg:string  canGet:True  canSet:True
#  
#  output
#      type:VT_EMPTY  arg:VT_VARIANT  canGet:False  canSet:True
#  
#  input
#      type:VT_VARIANT  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  inputmode
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  inputlen
#      type:int  arg:int  canGet:True  canSet:True
#  
#  commevent
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  mscommcompatible
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  rtthreshold
#      type:int  arg:int  canGet:True  canSet:True
#  
#  sthreshold
#      type:int  arg:int  canGet:True  canSet:True
#  
#  tapifailcode
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  wslocalversion
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  wslocalhighversion
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  wslocaldescription
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  wslocalsystemstatus
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  wslocalmaxsockets
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  wslocalhostname
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  wslocaladdress
#      type:string  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  ftpaccount
#      type:string  arg:string  canGet:True  canSet:True
#  
#  ftpconnected
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  ftpconnecttimeout
#      type:int  arg:int  canGet:True  canSet:True
#  
#  ftpfilelength
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  ftpfiletype
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  ftpinprogress
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  ftppassword
#      type:string  arg:string  canGet:True  canSet:True
#  
#  ftprestartat
#      type:int  arg:int  canGet:True  canSet:True
#  
#  ftpserveraddress
#      type:string  arg:string  canGet:True  canSet:True
#  
#  ftptransfertimeout
#      type:int  arg:int  canGet:True  canSet:True
#  
#  ftpuserloggedin
#      type:bool  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  ftpusername
#      type:string  arg:string  canGet:True  canSet:True
#  
#  ftpstate
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  ftpbytestransferred
#      type:int  arg:VT_EMPTY  canGet:True  canSet:False
#  
#  filtertapidevices
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  
#  
#  
#  METHODS
#  --------------------
#  QueryInterface
#      retType:  VT_VOID
#      params:
#          riid
#              in:True  out:False  optional:False  type:unsupported type 29
#          ppvObj
#              in:False  out:True  optional:False  type:unsupported type 26
#  
#  AddRef
#      retType:  int
#  
#  Release
#      retType:  int
#  
#  GetTypeInfoCount
#      retType:  VT_VOID
#      params:
#          pctinfo
#              in:False  out:True  optional:False  type:int
#  
#  GetTypeInfo
#      retType:  VT_VOID
#      params:
#          itinfo
#              in:True  out:False  optional:False  type:int
#          lcid
#              in:True  out:False  optional:False  type:int
#          pptinfo
#              in:False  out:True  optional:False  type:unsupported type 26
#  
#  GetIDsOfNames
#      retType:  VT_VOID
#      params:
#          riid
#              in:True  out:False  optional:False  type:unsupported type 29
#          rgszNames
#              in:True  out:False  optional:False  type:unsupported type 26
#          cNames
#              in:True  out:False  optional:False  type:int
#          lcid
#              in:True  out:False  optional:False  type:int
#          rgdispid
#              in:False  out:True  optional:False  type:int
#  
#  Invoke
#      retType:  VT_VOID
#      params:
#          dispidMember
#              in:True  out:False  optional:False  type:int
#          riid
#              in:True  out:False  optional:False  type:unsupported type 29
#          lcid
#              in:True  out:False  optional:False  type:int
#          wFlags
#              in:True  out:False  optional:False  type:int
#          pdispparams
#              in:True  out:False  optional:False  type:unsupported type 29
#          pvarResult
#              in:False  out:True  optional:False  type:VT_VARIANT
#          pexcepinfo
#              in:False  out:True  optional:False  type:unsupported type 29
#          puArgErr
#              in:False  out:True  optional:False  type:int
#  
#  PortOpen
#      retType:  int
#  
#  TapiDial
#      retType:  int
#  
#  TapiAnswer
#      retType:  int
#  
#  WinsockConnect
#      retType:  int
#  
#  WinsockListen
#      retType:  int
#  
#  Close
#      retType:  int
#  
#  AddStringToLog
#      retType:  VT_VOID
#      params:
#          S
#              in:True  out:False  optional:False  type:string
#  
#  FlushInBuffer
#      retType:  VT_VOID
#  
#  FlushOutBuffer
#      retType:  VT_VOID
#  
#  PutData
#      retType:  int
#      params:
#          Data
#              in:True  out:False  optional:False  type:VT_VARIANT
#  
#  PutString
#      retType:  int
#      params:
#          S
#              in:True  out:False  optional:False  type:string
#  
#  PutStringCRLF
#      retType:  int
#      params:
#          S
#              in:True  out:False  optional:False  type:string
#  
#  SendBreak
#      retType:  VT_VOID
#      params:
#          Ticks
#              in:True  out:False  optional:False  type:int
#          Yield
#              in:True  out:False  optional:False  type:bool
#  
#  AddDataTrigger
#      retType:  int
#      params:
#          TriggerString
#              in:True  out:False  optional:False  type:string
#          PacketSize
#              in:True  out:False  optional:False  type:int
#          Timeout
#              in:True  out:False  optional:False  type:int
#          IncludeStrings
#              in:True  out:False  optional:False  type:bool
#          IgnoreCase
#              in:True  out:False  optional:False  type:bool
#  
#  DisableDataTrigger
#      retType:  VT_VOID
#      params:
#          Index
#              in:True  out:False  optional:False  type:int
#  
#  EnableDataTrigger
#      retType:  VT_VOID
#      params:
#          Index
#              in:True  out:False  optional:False  type:int
#  
#  RemoveDataTrigger
#      retType:  VT_VOID
#      params:
#          Index
#              in:True  out:False  optional:False  type:int
#  
#  Clear
#      retType:  VT_VOID
#  
#  ClearAll
#      retType:  VT_VOID
#  
#  CopyToClipboard
#      retType:  VT_VOID
#  
#  GetAttributes
#      retType:  int
#      params:
#          aRow
#              in:True  out:False  optional:False  type:int
#          aCol
#              in:True  out:False  optional:False  type:int
#  
#  SetAttributes
#      retType:  VT_VOID
#      params:
#          aRow
#              in:True  out:False  optional:False  type:int
#          aCol
#              in:True  out:False  optional:False  type:int
#          Value
#              in:True  out:False  optional:False  type:int
#  
#  GetLine
#      retType:  string
#      params:
#          Index
#              in:True  out:False  optional:False  type:int
#  
#  SetLine
#      retType:  VT_VOID
#      params:
#          Index
#              in:True  out:False  optional:False  type:int
#          Value
#              in:True  out:False  optional:False  type:string
#  
#  TerminalSetFocus
#      retType:  VT_VOID
#  
#  TerminalWriteString
#      retType:  VT_VOID
#      params:
#          S
#              in:True  out:False  optional:False  type:string
#  
#  TerminalWriteStringCRLF
#      retType:  VT_VOID
#      params:
#          S
#              in:True  out:False  optional:False  type:string
#  
#  TapiAutoAnswer
#      retType:  VT_VOID
#  
#  TapiCancelCall
#      retType:  VT_VOID
#  
#  TapiConfigAndOpen
#      retType:  VT_VOID
#  
#  TapiSelectDevice
#      retType:  bool
#  
#  TapiSendTone
#      retType:  VT_VOID
#      params:
#          Digits
#              in:True  out:False  optional:False  type:string
#  
#  TapiSetRecordingParams
#      retType:  VT_VOID
#      params:
#          NumChannels
#              in:True  out:False  optional:False  type:int
#          NumSamplesPerSecond
#              in:True  out:False  optional:False  type:int
#          NumBitsPerSample
#              in:True  out:False  optional:False  type:int
#  
#  TapiShowConfigDialog
#      retType:  VT_VOID
#      params:
#          AllowEdit
#              in:True  out:False  optional:False  type:bool
#  
#  TapiPlayWaveFile
#      retType:  VT_VOID
#      params:
#          FileName
#              in:True  out:False  optional:False  type:string
#  
#  TapiRecordWaveFile
#      retType:  VT_VOID
#      params:
#          FileName
#              in:True  out:False  optional:False  type:string
#          Overwrite
#              in:True  out:False  optional:False  type:bool
#  
#  TapiStopWaveFile
#      retType:  VT_VOID
#  
#  TapiTranslatePhoneNo
#      retType:  string
#      params:
#          CanonicalAddr
#              in:True  out:False  optional:False  type:string
#  
#  CancelProtocol
#      retType:  VT_VOID
#  
#  EstimateTransferSecs
#      retType:  int
#      params:
#          Size
#              in:True  out:False  optional:False  type:int
#  
#  StartTransmit
#      retType:  VT_VOID
#  
#  StartReceive
#      retType:  VT_VOID
#  
#  DrawTextBiDiModeFlagsReadingOnly
#      retType:  int
#  
#  InitiateAction
#      retType:  VT_VOID
#  
#  IsRightToLeft
#      retType:  bool
#  
#  UseRightToLeftReading
#      retType:  bool
#  
#  UseRightToLeftScrollBar
#      retType:  bool
#  
#  AboutBox
#      retType:  VT_VOID
#  
#  RemoveAllDataTriggers
#      retType:  VT_VOID
#  
#  TapiStatusMsg
#      retType:  string
#      params:
#          Message
#              in:True  out:False  optional:False  type:int
#          State
#              in:True  out:False  optional:False  type:int
#          Reason
#              in:True  out:False  optional:False  type:int
#  
#  IsPortAvail
#      retType:  bool
#      params:
#          ComNumber
#              in:True  out:False  optional:False  type:int
#  
#  TapiTranslateDialog
#      retType:  bool
#      params:
#          CanonicalAddr
#              in:True  out:False  optional:False  type:string
#  
#  ErrorMsg
#      retType:  string
#      params:
#          ErrorCode
#              in:True  out:False  optional:False  type:int
#  
#  EnumTapiFirst
#      retType:  string
#  
#  EnumTapiNext
#      retType:  string
#  
#  IsPortInstalled
#      retType:  bool
#      params:
#          ComNumber
#              in:True  out:False  optional:False  type:int
#  
#  DelayTicks
#      retType:  VT_VOID
#      params:
#          Ticks
#              in:True  out:False  optional:False  type:int
#  
#  FTPAbort
#      retType:  bool
#  
#  FTPChangeDir
#      retType:  bool
#      params:
#          RemotePathName
#              in:True  out:False  optional:False  type:string
#  
#  FTPCurrentDir
#      retType:  string
#  
#  FTPDelete
#      retType:  bool
#      params:
#          RemotePathName
#              in:True  out:False  optional:False  type:string
#  
#  FTPHelp
#      retType:  string
#      params:
#          Command
#              in:True  out:False  optional:False  type:string
#  
#  FTPListDir
#      retType:  string
#      params:
#          RemotePathName
#              in:True  out:False  optional:False  type:string
#          FullList
#              in:True  out:False  optional:False  type:bool
#  
#  FTPLogIn
#      retType:  bool
#  
#  FTPLogOut
#      retType:  bool
#  
#  FTPMakeDir
#      retType:  bool
#      params:
#          RemotePathName
#              in:True  out:False  optional:False  type:string
#  
#  FTPRename
#      retType:  bool
#      params:
#          RemotePathName
#              in:True  out:False  optional:False  type:string
#          NewPathName
#              in:True  out:False  optional:False  type:string
#  
#  FTPRetrieve
#      retType:  bool
#      params:
#          RemotePathName
#              in:True  out:False  optional:False  type:string
#          LocalPathName
#              in:True  out:False  optional:False  type:string
#          RetrieveMode
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  FTPSendFTPCommand
#      retType:  string
#      params:
#          FTPCommand
#              in:True  out:False  optional:False  type:string
#  
#  FTPStatus
#      retType:  string
#      params:
#          RemotePathName
#              in:True  out:False  optional:False  type:string
#  
#  FTPStore
#      retType:  bool
#      params:
#          RemotePathName
#              in:True  out:False  optional:False  type:string
#          LocalPathName
#              in:True  out:False  optional:False  type:string
#          StoreMode
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  TapiLoadConfig
#      retType:  VT_VOID
#      params:
#          RegKey
#              in:True  out:False  optional:False  type:string
#          KeyName
#              in:True  out:False  optional:False  type:string
#  
#  GetTapiConfig
#      retType:  VT_VARIANT
#  
#  SetTapiConfig
#      retType:  VT_VOID
#      params:
#          Value
#              in:True  out:False  optional:False  type:VT_VARIANT
#  
#  TapiSaveConfig
#      retType:  VT_VOID
#      params:
#          RegKey
#              in:True  out:False  optional:False  type:string
#          KeyName
#              in:True  out:False  optional:False  type:string
#  
#  
#  
#  
#  EVENTS
#  --------------------
#  CTSChanged
#      retType:  VT_VOID
#      params:
#          NewValue
#              in:True  out:False  optional:False  type:bool
#  
#  DCDChanged
#      retType:  VT_VOID
#      params:
#          NewValue
#              in:True  out:False  optional:False  type:bool
#  
#  DSRChanged
#      retType:  VT_VOID
#      params:
#          NewValue
#              in:True  out:False  optional:False  type:bool
#  
#  LineBreak
#      retType:  VT_VOID
#  
#  LineError
#      retType:  VT_VOID
#  
#  PortClose
#      retType:  VT_VOID
#  
#  PortOpen
#      retType:  VT_VOID
#  
#  Ring
#      retType:  VT_VOID
#  
#  RXD
#      retType:  VT_VOID
#      params:
#          Data
#              in:True  out:False  optional:False  type:VT_VARIANT
#  
#  WinsockAccept
#      retType:  VT_VOID
#      params:
#          Addr
#              in:True  out:False  optional:False  type:string
#          Accept
#              in:True  out:True  optional:False  type:bool
#  
#  WinsockConnect
#      retType:  VT_VOID
#  
#  WinsockDisconnect
#      retType:  VT_VOID
#  
#  WinsockError
#      retType:  VT_VOID
#      params:
#          ErrCode
#              in:True  out:False  optional:False  type:int
#  
#  WinsockGetAddress
#      retType:  VT_VOID
#      params:
#          Address
#              in:True  out:True  optional:False  type:string
#          Port
#              in:True  out:True  optional:False  type:string
#  
#  DataTrigger
#      retType:  VT_VOID
#      params:
#          Index
#              in:True  out:False  optional:False  type:int
#          Timeout
#              in:True  out:False  optional:False  type:bool
#          Data
#              in:True  out:False  optional:False  type:VT_VARIANT
#          Size
#              in:True  out:False  optional:False  type:int
#          ReEnable
#              in:True  out:True  optional:False  type:bool
#  
#  TapiCallerID
#      retType:  VT_VOID
#      params:
#          ID
#              in:True  out:False  optional:False  type:string
#          IDName
#              in:True  out:False  optional:False  type:string
#  
#  TapiConnect
#      retType:  VT_VOID
#  
#  TapiDTMF
#      retType:  VT_VOID
#      params:
#          Digit
#              in:True  out:False  optional:False  type:int
#          ErrorCode
#              in:True  out:False  optional:False  type:int
#  
#  TapiFail
#      retType:  VT_VOID
#  
#  TapiGetNumber
#      retType:  VT_VOID
#      params:
#          PhoneNum
#              in:True  out:True  optional:False  type:string
#  
#  TapiPortClose
#      retType:  VT_VOID
#  
#  TapiPortOpen
#      retType:  VT_VOID
#  
#  TapiStatus
#      retType:  VT_VOID
#      params:
#          First
#              in:True  out:False  optional:False  type:bool
#          Last
#              in:True  out:False  optional:False  type:bool
#          Device
#              in:True  out:False  optional:False  type:int
#          Message
#              in:True  out:False  optional:False  type:int
#          Param1
#              in:True  out:False  optional:False  type:int
#          Param2
#              in:True  out:False  optional:False  type:int
#          Param3
#              in:True  out:False  optional:False  type:int
#  
#  TapiWaveNotify
#      retType:  VT_VOID
#      params:
#          Msg
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  TapiWaveSilence
#      retType:  VT_VOID
#      params:
#          StopRecording
#              in:True  out:True  optional:False  type:bool
#          Hangup
#              in:True  out:True  optional:False  type:bool
#  
#  CursorMoved
#      retType:  VT_VOID
#      params:
#          aRow
#              in:True  out:False  optional:False  type:int
#          aCol
#              in:True  out:False  optional:False  type:int
#  
#  ProtocolAccept
#      retType:  VT_VOID
#      params:
#          Accept
#              in:True  out:True  optional:False  type:bool
#          FName
#              in:True  out:True  optional:False  type:string
#  
#  ProtocolFinish
#      retType:  VT_VOID
#      params:
#          ErrorCode
#              in:True  out:False  optional:False  type:int
#  
#  ProtocolLog
#      retType:  VT_VOID
#      params:
#          Log
#              in:True  out:False  optional:False  type:int
#  
#  ProtocolStatus
#      retType:  VT_VOID
#      params:
#          Options
#              in:True  out:False  optional:False  type:int
#  
#  ConnectButtonClick
#      retType:  VT_VOID
#      params:
#          Default
#              in:True  out:True  optional:False  type:bool
#  
#  ListenButtonClick
#      retType:  VT_VOID
#      params:
#          Default
#              in:True  out:True  optional:False  type:bool
#  
#  CloseButtonClick
#      retType:  VT_VOID
#      params:
#          Default
#              in:True  out:True  optional:False  type:bool
#  
#  DeviceButtonClick
#      retType:  VT_VOID
#      params:
#          DeviceType
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  SendButtonClick
#      retType:  VT_VOID
#      params:
#          Default
#              in:True  out:True  optional:False  type:bool
#  
#  ReceiveButtonClick
#      retType:  VT_VOID
#      params:
#          Default
#              in:True  out:True  optional:False  type:bool
#  
#  FontButtonClick
#      retType:  VT_VOID
#      params:
#          Default
#              in:True  out:True  optional:False  type:bool
#  
#  Comm
#      retType:  VT_VOID
#  
#  EmulationButtonClick
#      retType:  VT_VOID
#      params:
#          Emulation
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  FTPError
#      retType:  unsupported type 25
#      params:
#          ErrorCode
#              in:True  out:False  optional:False  type:int
#          ErrorText
#              in:True  out:False  optional:False  type:string
#  
#  FTPLog
#      retType:  unsupported type 25
#      params:
#          LogCode
#              in:True  out:False  optional:False  type:unsupported type 29
#  
#  FTPReply
#      retType:  unsupported type 25
#      params:
#          ReplyCode
#              in:True  out:False  optional:False  type:int
#          ReplyText
#              in:True  out:False  optional:False  type:string
#  
#  FTPStatus
#      retType:  unsupported type 25
#      params:
#          StatusCode
#              in:True  out:False  optional:False  type:unsupported type 29
#          InfoText
#              in:True  out:False  optional:False  type:string
#  
#  ProcessChar
#      retType:  unsupported type 25
#      params:
#          CharSource
#              in:True  out:False  optional:False  type:unsupported type 29
#          Character
#              in:True  out:False  optional:False  type:int
#          ReplaceWith
#              in:True  out:True  optional:False  type:string
#  
#  
#  
#  
